
# All outputs should be put under /app folder.
ARG NAME
ARG VERSION
ARG TARGETARCH

# Make sure required arguments exist
RUN test -n "$NAME" || (echo "NAME argument is not set." && false)
RUN test -n "$VERSION"  || (echo "VERSION argument is not set." && false)
RUN test -n "$TARGETARCH" || (echo "TARGETARCH argument is not set." && false)

# Make sure /app directory is not empty
RUN test -n "`ls -A /app`" || (echo "/app doesn't exist or empty. Please copy all published files into /app." && false)

WORKDIR /app

# Generate file lists
RUN find . -type f -printf "%P\n" | sort > /tmp/filelist

# Compress all files
RUN for f in `cat /tmp/filelist`; do mkdir -p `dirname /tmp/$f` && xz -9 $f --stdout > /tmp/$f.xz; done

# Generate metadata
COPY <<-EOT metadata
name: $NAME
version: $VERSION
arch: $TARGETARCH
EOT

RUN echo buildtime: `date -R` >> metadata && \
    echo files: >> metadata && \
    for f in `cat /tmp/filelist`; do find . -maxdepth 1 -name $f -printf "  - `md5sum $f | awk '{print $1}'` %M\t`stat -c %s /tmp/$f.xz`\t%P\n" >> metadata; done

# Generate package
RUN printf "\xF1SLP\x00" > $NAME.slp && \
    xz -9 metadata --stdout > /tmp/metadata.xz && \
    truncate -s $(((`stat -c %s /tmp/metadata.xz` + 255) & ~0xff)) /tmp/metadata.xz && \
    SIZE=`stat -c %s /tmp/metadata.xz` && printf $(echo \\x$(printf %x $(echo $(($SIZE>>8&0xff))))\\x$(printf %x $(echo $(($SIZE>>16&0xff))))\\x$(printf %x $(echo $(($SIZE>>24&0xff))))) >> $NAME.slp && \
    cat /tmp/metadata.xz >> $NAME.slp && \
    for f in `cat /tmp/filelist`; do cat /tmp/$f.xz >> $NAME.slp; done

# Output
FROM scratch
COPY --from=0 /app /app
